package jframe;

import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;
import java.io.File;
import java.nio.file.Paths;
import java.sql.*;
import javax.swing.table.*;

public class Loggedin extends javax.swing.JFrame {

    private InfDB databas;
    String pid = "";
    boolean admin = false;
    //static boolean open = false;

    public Loggedin() {
        initComponents();
        
        try {
            String path = Paths.get("").toAbsolutePath().toString() + File.separator + "MICEDB.FDB";
            databas = new InfDB(path);
            System.out.println("Anslutningen lyckades");
        } catch (InfException ex) {
            System.out.println(ex.getMessage());
        }
        String output = "";
        String sql = "select SID, BETECKNING, STARTDATUM, RELEASEDATUM, AID from spelprojekt";
        try {
            
            ArrayList<HashMap<String, String>> spelprojekt = databas.fetchRows(sql);
            for (int i = 0; i < spelprojekt.size(); i++) {
                int col=0;
                tablearea.getModel().setValueAt(spelprojekt.get(i).get("SID"), i, col); 
                col++;
                tablearea.getModel().setValueAt(spelprojekt.get(i).get("BETECKNING"), i, col);
                col++;
                tablearea.getModel().setValueAt(spelprojekt.get(i).get("STARTDATUM"), i, col);
                col++;
                tablearea.getModel().setValueAt(spelprojekt.get(i).get("RELEASEDATUM"), i, col);
                col++;
                tablearea.getModel().setValueAt(spelprojekt.get(i).get("AID"), i, col);
            }
        } catch (InfException ex) {
            System.out.println(ex.getMessage());
        }
        loadAnstallda();
        logic logic = new logic();
        
    }
    
    public void login() {
        this.admin=true;
        addAnstalld.setVisible(true);
        updateAnstalld.setVisible(true);
        updateKomp.setVisible(true);
        specialroll.setVisible(true);
        tabortanstalld.setVisible(true);
        addProj.setVisible(true);
        updateProj.setVisible(true);
        updateLeader.setVisible(true);
        updateAnstalldaproj.setVisible(true);
        updatePlatformsproj.setVisible(true);
        logoutbtn.setVisible(true);
        loginbtn.setVisible(false);
        this.pack();
    }
    
    public void logout() {
        this.admin=false;
        addAnstalld.setEnabled(false);
        updateAnstalld.setEnabled(false);
        updateKomp.setEnabled(false);
        specialroll.setEnabled(false);
        tabortanstalld.setEnabled(false);
        addProj.setEnabled(false);
        updateProj.setEnabled(false);
        updateLeader.setEnabled(false);
        updateAnstalldaproj.setEnabled(false);
        updatePlatformsproj.setEnabled(false);
        logoutbtn.setVisible(false);
        loginbtn.setVisible(true);
    }
    public void delAnstalld(int aid) {
        String sql = "DELETE FROM ANSTALLD WHERE AID="+aid;
        try {
        databas.delete(sql);
        
        }catch (NumberFormatException e) {  
                System.out.println(e.getMessage());
                JOptionPane.showMessageDialog(null, "Något gick fel med inmatningen");
            }
            catch (InfException e) {  
                System.out.println(e.getMessage());
                JOptionPane.showMessageDialog(null, "Något gick fel vid kontakten med databasen");
                
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        tabortanstalld = new javax.swing.JButton();
        updateAnstalld = new javax.swing.JButton();
        updateKomp = new javax.swing.JButton();
        reloadanstalld = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        anstalldaTable = new javax.swing.JTable();
        addAnstalld = new javax.swing.JButton();
        specialroll = new javax.swing.JButton();
        logoutbtn = new javax.swing.JButton();
        loginbtn = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        listp = new javax.swing.JButton();
        listaplattf = new javax.swing.JButton();
        listaspelunderutv = new javax.swing.JButton();
        listaslapptaspel = new javax.swing.JButton();
        listaledare = new javax.swing.JButton();
        allprojects = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablearea = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        projextra = new javax.swing.JTextArea();
        addProj = new javax.swing.JButton();
        updateProj = new javax.swing.JButton();
        updateLeader = new javax.swing.JButton();
        updateAnstalldaproj = new javax.swing.JButton();
        updatePlatformsproj = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jTextKompetens = new javax.swing.JTextArea();
        btnVisaKompetens = new javax.swing.JButton();
        btnShowEmployees = new javax.swing.JButton();
        btnProjektledare = new javax.swing.JButton();
        btnVisaSpelProjektForAnstalld = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableEmployee = new javax.swing.JTable();

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 945, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabortanstalld.setText("Ta bort markerad anställd");
        tabortanstalld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabortanstalldActionPerformed(evt);
            }
        });

        updateAnstalld.setText("Uppdatera anställds information");
        updateAnstalld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAnstalldActionPerformed(evt);
            }
        });

        updateKomp.setText("Uppdatera kompetensdomän och plattform för anställd");
        updateKomp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateKompActionPerformed(evt);
            }
        });

        reloadanstalld.setText("Ladda om listan för anställda");
        reloadanstalld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloadanstalldActionPerformed(evt);
            }
        });

        anstalldaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "AID", "Namn", "Telefon", "Mail", "Användarnamn"
            }
        ));
        jScrollPane1.setViewportView(anstalldaTable);

        addAnstalld.setText("Lägg till ny anställd");
        addAnstalld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAnstalldActionPerformed(evt);
            }
        });

        specialroll.setText("Uppdatera anställds Specialroll(Projektledare/Specialist)");
        specialroll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specialrollActionPerformed(evt);
            }
        });

        logoutbtn.setText("Logga ut");
        logoutbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutbtnActionPerformed(evt);
            }
        });

        loginbtn.setText("Logga in");
        loginbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateAnstalld)
                    .addComponent(addAnstalld)
                    .addComponent(updateKomp)
                    .addComponent(specialroll))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(tabortanstalld)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(reloadanstalld)
                        .addGap(48, 48, 48))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(loginbtn)
                    .addComponent(logoutbtn))
                .addGap(28, 28, 28))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(reloadanstalld)
                            .addComponent(tabortanstalld)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(addAnstalld)
                        .addGap(18, 18, 18)
                        .addComponent(updateAnstalld)
                        .addGap(18, 18, 18)
                        .addComponent(updateKomp)
                        .addGap(18, 18, 18)
                        .addComponent(specialroll)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 204, Short.MAX_VALUE)
                .addComponent(loginbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logoutbtn)
                .addGap(33, 33, 33))
        );

        jTabbedPane1.addTab("Anställda", jPanel3);

        listp.setText("Lista Projekts anställda");
        listp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listpActionPerformed(evt);
            }
        });

        listaplattf.setText("Lista plattformar");
        listaplattf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaplattfActionPerformed(evt);
            }
        });

        listaspelunderutv.setText("Lista spel under utveckling");
        listaspelunderutv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaspelunderutvActionPerformed(evt);
            }
        });

        listaslapptaspel.setText("Lista släppta spel");
        listaslapptaspel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaslapptaspelActionPerformed(evt);
            }
        });

        listaledare.setText("Lista ledare för projekt");
        listaledare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaledareActionPerformed(evt);
            }
        });

        allprojects.setText("Alla Spelutvecklingsprojekt");
        allprojects.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allprojectsActionPerformed(evt);
            }
        });

        tablearea.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "SID", "Beteckning", "Startdatum", "Releasedatum", "AID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablearea);
        if (tablearea.getColumnModel().getColumnCount() > 0) {
            tablearea.getColumnModel().getColumn(0).setResizable(false);
            tablearea.getColumnModel().getColumn(1).setResizable(false);
            tablearea.getColumnModel().getColumn(2).setResizable(false);
            tablearea.getColumnModel().getColumn(3).setResizable(false);
        }

        projextra.setColumns(20);
        projextra.setRows(5);
        jScrollPane4.setViewportView(projextra);

        addProj.setText("Lägg till nytt spelutvecklingsprojekt");
        addProj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProjActionPerformed(evt);
            }
        });

        updateProj.setText("Uppdatera spelutvecklingsprojekt");
        updateProj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProjActionPerformed(evt);
            }
        });

        updateLeader.setText("Uppdatera projektledare för projekt");
        updateLeader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateLeaderActionPerformed(evt);
            }
        });

        updateAnstalldaproj.setText("Uppdatera anställda för projekt");
        updateAnstalldaproj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAnstalldaprojActionPerformed(evt);
            }
        });

        updatePlatformsproj.setText("Uppdatera plattformar för projekt");
        updatePlatformsproj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePlatformsprojActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(updateLeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateAnstalldaproj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateProj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addProj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updatePlatformsproj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane4)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(allprojects)
                            .addGap(18, 18, 18)
                            .addComponent(listaspelunderutv)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(listaslapptaspel))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 601, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(listp)
                        .addGap(89, 89, 89)
                        .addComponent(listaledare)
                        .addGap(73, 73, 73)
                        .addComponent(listaplattf)))
                .addContainerGap(159, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allprojects)
                    .addComponent(listaspelunderutv)
                    .addComponent(listaslapptaspel))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(addProj)
                        .addGap(18, 18, 18)
                        .addComponent(updateProj)
                        .addGap(18, 18, 18)
                        .addComponent(updateLeader)
                        .addGap(18, 18, 18)
                        .addComponent(updateAnstalldaproj)
                        .addGap(18, 18, 18)
                        .addComponent(updatePlatformsproj)))
                .addGap(12, 12, 12)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listp)
                    .addComponent(listaledare)
                    .addComponent(listaplattf))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Spelutvecklingsprojekt", jPanel5);

        jTextKompetens.setColumns(20);
        jTextKompetens.setRows(5);

        btnVisaKompetens.setText("Visa kompetensinformation");
        btnVisaKompetens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisaKompetensActionPerformed(evt);
            }
        });

        btnShowEmployees.setText("Visa alla anställda");
        btnShowEmployees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowEmployeesActionPerformed(evt);
            }
        });

        btnProjektledare.setText("Visa projektledarstatus");
        btnProjektledare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProjektledareActionPerformed(evt);
            }
        });

        btnVisaSpelProjektForAnstalld.setText("Visa spelprojekt för anställd");
        btnVisaSpelProjektForAnstalld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisaSpelProjektForAnstalldActionPerformed(evt);
            }
        });

        jTableEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "AID", "Namn", "Användarnamn"
            }
        ));
        jScrollPane2.setViewportView(jTableEmployee);
        if (jTableEmployee.getColumnModel().getColumnCount() > 0) {
            jTableEmployee.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnShowEmployees, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnProjektledare, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(74, 74, 74)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnVisaSpelProjektForAnstalld)
                            .addComponent(btnVisaKompetens, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jTextKompetens, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextKompetens, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnShowEmployees)
                    .addComponent(btnVisaKompetens))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProjektledare)
                    .addComponent(btnVisaSpelProjektForAnstalld))
                .addContainerGap(217, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Kunskapsdomäner", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVisaSpelProjektForAnstalldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisaSpelProjektForAnstalldActionPerformed

        if (jTableEmployee.getSelectedRow()==-1) {
            JOptionPane.showMessageDialog(null, "Du har inte markerat en anställd!");
        } else {

            String output1 = "";

            int row = jTableEmployee.getSelectedRow();
            int result=0;

            try {
                result = Integer.parseInt( jTableEmployee.getValueAt(row, 0).toString() );
                String sql = "select Spelprojekt.Beteckning from Spelprojekt JOIN Arbetar_i on Spelprojekt.SID = Arbetar_i.SID where Arbetar_i.AID=" + result;
                //

                if(databas.fetchRows(sql)!= null) {
                ArrayList<HashMap<String, String>> listaSpel = databas.fetchRows(sql);
                if(listaSpel != null) {
                for (int i = 0; i < listaSpel.size(); i++) {
                    output1 += "- " + listaSpel.get(i).get("BETECKNING") + "\n";
                }
                }
                }
                
                if(output1=="") {
                    jTextKompetens.setText("Information saknas");
                }
                else {
                    jTextKompetens.setText("Delaktig i följande spelprojekt:\n" + "\n" + output1);

                }

            } catch (InfException ex) {
                System.out.println(ex.getMessage());
            }
            
        }
    }//GEN-LAST:event_btnVisaSpelProjektForAnstalldActionPerformed

    private void btnProjektledareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProjektledareActionPerformed

        if (jTableEmployee.getSelectedRow()==-1) {
            JOptionPane.showMessageDialog(null, "Du har inte markerat en anställd!");

        } else {

            String output1 = "";
            String output2 = "";

            int row = jTableEmployee.getSelectedRow()+1;
            int result=0;

            try {
                result = Integer.parseInt( jTableEmployee.getValueAt(row-1, 0).toString() );
                String sql1 = "select SPELPROJEKT.BETECKNING, SPELPROJEKT.STARTDATUM, SPELPROJEKT.RELEASEDATUM from SPELPROJEKT WHERE releasedatum > CURRENT_DATE and startdatum < CURRENT_DATE and SPELPROJEKT.AID=" + result;
                String sql2 = "select SPELPROJEKT.BETECKNING, SPELPROJEKT.STARTDATUM, SPELPROJEKT.RELEASEDATUM from SPELPROJEKT WHERE releasedatum < CURRENT_DATE  and SPELPROJEKT.AID=" + result;

                if(databas.fetchRows(sql1) != null) {
                    
                ArrayList<HashMap<String, String>> pogoendeprojekt = databas.fetchRows(sql1); 
                for (int i = 0; i < pogoendeprojekt.size(); i++) {
                    output1 += "- " + pogoendeprojekt.get(i).get("BETECKNING") + "\nProjektstart: " + pogoendeprojekt.get(i).get("STARTDATUM") + "\nBeräknat lanseringsdatum: " + pogoendeprojekt.get(i).get("RELEASEDATUM");
                }
                }
            
                if(databas.fetchRows(sql2) != null) {
                ArrayList<HashMap<String, String>> avslutadeprojekt = databas.fetchRows(sql2);
                for (int i = 0; i < avslutadeprojekt.size(); i++) {
                    output2 += "- " + avslutadeprojekt.get(i).get("BETECKNING") + "\nProjektstart: " + avslutadeprojekt.get(i).get("STARTDATUM") + "\nLanserades: " + avslutadeprojekt.get(i).get("RELEASEDATUM") + "\n";
                }
                }
                
                if(output1=="" && output2 =="") {
                    jTextKompetens.setText("Information saknas");
                }
                else {
                    jTextKompetens.setText("Projektledare för:\n" + output1 + "\n" + "\nHar tidigare varit projektledare för:\n" + output2 + "\n");

                }

            } catch (InfException ex) {
                System.out.println(ex.getMessage());
            }

            //            finally {
                //
                //                while (output1== "" && output2=="") {
                    //                    jTextKompetens.setText("Den valda har ännu inte varit projektledare för ett spelprojekt");
                    //
                    //
                    //                    if (output1=="") {
                        //                        jTextKompetens.setText("Har tidigare varit projektledare för:\n" + output2);
                        //
                        //                    }
                    //
                    //                    if (output2=="") {
                        //                        jTextKompetens.setText("Projektledare för:\n" + output1);
                        //                    }
                    //
                    //                    else {
                        //
                        //                        jTextKompetens.setText("Projektledare för:\n" + "\n" + output1 + "\nHar tidigare varit projektledare för:\n" + output2);
                        //                    }
                    //                    break;
                    //
                    //                }
                //            }
          
       
        }
    }//GEN-LAST:event_btnProjektledareActionPerformed

    private void btnShowEmployeesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowEmployeesActionPerformed

        tablehandler th = new tablehandler();
        th.cleartable(jTableEmployee);
        String sql = "select AID, NAMN, ANVNAMN from anstalld";
        try {

            ArrayList<HashMap<String, String>> anstalld = databas.fetchRows(sql);
            for (int i = 0; i < anstalld.size(); i++) {
                int col=0;
                jTableEmployee.getModel().setValueAt(anstalld.get(i).get("AID"), i, col);
                col++;
                jTableEmployee.getModel().setValueAt(anstalld.get(i).get("NAMN"), i, col);
                col++;
                jTableEmployee.getModel().setValueAt(anstalld.get(i).get("ANVNAMN"), i, col);
                col++;

            }
        } catch (InfException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_btnShowEmployeesActionPerformed

    private void btnVisaKompetensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisaKompetensActionPerformed

        if (jTableEmployee.getSelectedRow()==-1) {
            JOptionPane.showMessageDialog(null, "Du har inte markerat en anställd!");
        } else {

            String output1 = "";
            String output2 = "";
            String output3 = "";
            String output4 = "";
            int row = jTableEmployee.getSelectedRow()+1;
            int result=0;

            try {
                result = Integer.parseInt( jTableEmployee.getValueAt(row-1, 0).toString() );
                String sql1 = "select PLATTFORM.BENAMNING AS BENAMNING2, KOMPETENSDOMAN.BENAMNING, HAR_KOMPETENS.KOMPETENSNIVA from PLATTFORM, KOMPETENSDOMAN, HAR_KOMPETENS where PLATTFORM.PID = HAR_KOMPETENS.PID and KOMPETENSDOMAN.KID = HAR_KOMPETENS.KID and HAR_KOMPETENS.AID=" + result;

                if (databas.fetchRows(sql1) != null) {
                ArrayList<HashMap<String, String>> kompetensdoman = databas.fetchRows(sql1);
                for (int i = 0; i < kompetensdoman.size(); i++) {
                    output1 += "\nDomän: " + kompetensdoman.get(i).get("BENAMNING") + "\nPlattform: " + kompetensdoman.get(i).get("BENAMNING2") + "\nNivå: " + kompetensdoman.get(i).get("KOMPETENSNIVA") + "\n";
                }
                }

            if(output1=="") {
                    jTextKompetens.setText("Information saknas");
                }
                else {
                    jTextKompetens.setText(output1);

                }    
          
            } catch (InfException ex) {
                System.out.println(ex.getMessage());
            }
          
        }
    }//GEN-LAST:event_btnVisaKompetensActionPerformed

    private void updatePlatformsprojActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePlatformsprojActionPerformed
        // TODO add your handling code here:
        int result=logic.getID(tablearea);
        if(result!=-1) {
        UppdProjPlattform l = new UppdProjPlattform();
        l.DrawPlatforms(result);
        l.setVisible(true);
        }
    }//GEN-LAST:event_updatePlatformsprojActionPerformed

    private void updateAnstalldaprojActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAnstalldaprojActionPerformed
        // TODO add your handling code here:
        int result=logic.getID(tablearea);
        if(result!=-1) {
        UppdateraAnstalldaProj l = new UppdateraAnstalldaProj();
        l.setText(result);
        l.setVisible(true);
        }
    }//GEN-LAST:event_updateAnstalldaprojActionPerformed

    private void updateLeaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateLeaderActionPerformed
        // TODO add your handling code here:
        int result=logic.getID(tablearea);
        if(result!=-1) {
        UppdProjLead l = new UppdProjLead();
        l.getValues(result);
        l.setVisible(true);
        }
    }//GEN-LAST:event_updateLeaderActionPerformed

    private void updateProjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProjActionPerformed
        // TODO add your handling code here:
        int result=logic.getID(tablearea);
        if(result!=-1) {
        UppdateraProjekt l = new UppdateraProjekt();
        l.getValues(result);
        l.setVisible(true);
        }
    }//GEN-LAST:event_updateProjActionPerformed

    private void addProjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProjActionPerformed
        // TODO add your handling code here:
        LaggtillProjekt l = new LaggtillProjekt();
        l.setVisible(true);
    }//GEN-LAST:event_addProjActionPerformed

    private void allprojectsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allprojectsActionPerformed
        // TODO add your handling code here:
        tablehandler th = new tablehandler();
        th.cleartable(tablearea);
        String sql = "select SID, BETECKNING, STARTDATUM, RELEASEDATUM, AID from spelprojekt";
        try {

            ArrayList<HashMap<String, String>> spelprojekt = databas.fetchRows(sql);
            for (int i = 0; i < spelprojekt.size(); i++) {
                int col=0;
                tablearea.getModel().setValueAt(spelprojekt.get(i).get("SID"), i, col);
                col++;
                tablearea.getModel().setValueAt(spelprojekt.get(i).get("BETECKNING"), i, col);
                col++;
                tablearea.getModel().setValueAt(spelprojekt.get(i).get("STARTDATUM"), i, col);
                col++;
                tablearea.getModel().setValueAt(spelprojekt.get(i).get("RELEASEDATUM"), i, col);
                col++;
                tablearea.getModel().setValueAt(spelprojekt.get(i).get("AID"), i, col);
            }
        } catch (InfException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_allprojectsActionPerformed

    private void listaledareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaledareActionPerformed
        // TODO add your handling code here:
        if (tablearea.getSelectedRow()==-1) {
            JOptionPane.showMessageDialog(null, "Markera ett spelprojekt!");
        } else {

            String output = "";
            int row = tablearea.getSelectedRow()+1;
            int result=0;

            String proj = "";
            try {
                result = Integer.parseInt( tablearea.getValueAt(row-1, 0).toString() );
                String sql = "select namn from ANSTALLD JOIN SPELPROJEKT on anstalld.AID=SPELPROJEKT.AID WHERE SPELPROJEKT.sid=" + result;
                String sql1 = "Select beteckning from spelprojekt where sid=" + result;
                ArrayList<HashMap<String, String>> anstalldaproj = databas.fetchRows(sql);
                for (int i = 0; i < anstalldaproj.size(); i++) {
                    output += anstalldaproj.get(i).get("NAMN") + "\n";
                }
                proj = databas.fetchSingle(sql1);
            } catch (InfException ex) {
                System.out.println(ex.getMessage());
            }
            finally {
                if(output=="") {
                    projextra.setText("Det finns ingen ledare listad för detta spelutvecklingsprojekt.");
                }

                else {
                    projextra.setText("Ledare för spelutvecklingsprojektet " + proj + " är: \n" + output);
                }
            }
        }
    }//GEN-LAST:event_listaledareActionPerformed

    private void listaslapptaspelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaslapptaspelActionPerformed
        // TODO add your handling code here:
        String output = "";
        String sql = "select * from SPELPROJEKT WHERE releasedatum < CURRENT_DATE";

        try {
            ArrayList<HashMap<String, String>> anstalldaproj = databas.fetchRows(sql);
            for (int i = 0; i < anstalldaproj.size(); i++) {
                int col=0;
                tablearea.getModel().setValueAt(anstalldaproj.get(i).get("SID"), i, col);
                col++;
                tablearea.getModel().setValueAt(anstalldaproj.get(i).get("BETECKNING"), i, col);
                col++;
                tablearea.getModel().setValueAt(anstalldaproj.get(i).get("STARTDATUM"), i, col);
                col++;
                tablearea.getModel().setValueAt(anstalldaproj.get(i).get("RELEASEDATUM"), i, col);
                col++;
                tablearea.getModel().setValueAt(anstalldaproj.get(i).get("AID"), i, col);

            }
        } catch (InfException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_listaslapptaspelActionPerformed

    private void listaspelunderutvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaspelunderutvActionPerformed
        // TODO add your handling code here:
        String output = "";
        String sql = "select * from SPELPROJEKT WHERE releasedatum > CURRENT_DATE and startdatum < CURRENT_DATE";

        try {
            tablehandler th = new tablehandler();
            th.cleartable(tablearea);

            ArrayList<HashMap<String, String>> anstalldaproj = databas.fetchRows(sql);
            for (int i = 0; i < anstalldaproj.size(); i++) {
                int col=0;
                tablearea.getModel().setValueAt(anstalldaproj.get(i).get("SID"), i, col);
                col++;
                tablearea.getModel().setValueAt(anstalldaproj.get(i).get("BETECKNING"), i, col);
                col++;
                tablearea.getModel().setValueAt(anstalldaproj.get(i).get("STARTDATUM"), i, col);
                col++;
                tablearea.getModel().setValueAt(anstalldaproj.get(i).get("RELEASEDATUM"), i, col);
                col++;
                tablearea.getModel().setValueAt(anstalldaproj.get(i).get("AID"), i, col);

            }
        } catch (InfException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_listaspelunderutvActionPerformed

    private void listaplattfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaplattfActionPerformed
        // TODO add your handling code here:
        if (tablearea.getSelectedRow()==-1) {
            JOptionPane.showMessageDialog(null, "Markera ett spelprojekt!");
        } else {

            String output = "";
            int row = tablearea.getSelectedRow()+1;
            int result=0;

            String proj = "";

            try {
                result = Integer.parseInt( tablearea.getValueAt(row-1, 0).toString() );
                String sql = "select benamning from PLATTFORM JOIN INNEFATTAR on PLATTFORM.PID=INNEFATTAR.PID WHERE sid=" + row;
                String sql1 = "Select beteckning from spelprojekt where sid=" + row;

                ArrayList<HashMap<String, String>> anstalldaproj = databas.fetchRows(sql);
                for (int i = 0; i < anstalldaproj.size(); i++) {
                    output += anstalldaproj.get(i).get("BENAMNING") + "\n";
                }
                proj = databas.fetchSingle(sql1);
            } catch (InfException ex) {
                System.out.println(ex.getMessage());
            }
            finally {
                if(output=="") {
                    projextra.setText("Det finns inga registrerade plattformar för valt projekt");
                }
                else {
                    projextra.setText(proj + " utvecklas för följande plattformar:\n" + output);
                }

            }}
    }//GEN-LAST:event_listaplattfActionPerformed

    private void listpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listpActionPerformed
        // TODO add your handling code here:

        if (tablearea.getSelectedRow()==-1) {
            JOptionPane.showMessageDialog(null, "Markera ett spelprojekt!");
        } else {

            String output = "";
            int row = tablearea.getSelectedRow()+1;
            int result=0;
            //String sqlselector="select namn from(select namn, rownum as rn from (select namn from anstalld JOIN ARBETAR_I on anstalld.AID=ARBETAR_I.AID order by sal desc)) where rn="+row;

            String proj = "";

            try {
                result = Integer.parseInt( tablearea.getValueAt(row-1, 0).toString() );
                String sql = "select namn from ANSTALLD JOIN ARBETAR_I on anstalld.AID=ARBETAR_I.AID WHERE ARBETAR_I.SID=" + result;
                String sql1 = "Select beteckning from spelprojekt where sid=" + result;
                ArrayList<HashMap<String, String>> anstalldaproj = databas.fetchRows(sql);
                for (int i = 0; i < anstalldaproj.size(); i++) {
                    output += anstalldaproj.get(i).get("NAMN") + "\n";
                }
                proj = databas.fetchSingle(sql1);

            } catch (InfException ex) {
                System.out.println(ex.getMessage());
            }
            finally {
                if(output=="") {
                    projextra.setText("Det finns inga anställda för valt projekt");
                }
                else {
                    projextra.setText("Anställda som arbetar med " + proj + "\n" + output);
                }
            }
        }
    }//GEN-LAST:event_listpActionPerformed

    private void addAnstalldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAnstalldActionPerformed
        // TODO add your handling code here:
        Laggtillanstalld l = new Laggtillanstalld();
        l.setVisible(true);
    }//GEN-LAST:event_addAnstalldActionPerformed

    private void reloadanstalldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadanstalldActionPerformed
        // TODO add your handling code here:
        loadAnstallda();
    }//GEN-LAST:event_reloadanstalldActionPerformed

    private void updateAnstalldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAnstalldActionPerformed
        // TODO add your handling code here:
        int result=logic.getID(anstalldaTable);
        if(result!=-1) {
        uppdateraAnstalld l = new uppdateraAnstalld();
        l.getValues(result);
        l.setVisible(true);
        }
    }//GEN-LAST:event_updateAnstalldActionPerformed

    private void tabortanstalldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabortanstalldActionPerformed
        if (anstalldaTable.getSelectedRow()==-1) {
            JOptionPane.showMessageDialog(null, "Markera en plattform!");
        } else {
            String output = "";
            int row = anstalldaTable.getSelectedRow()+1;
            int result=0;
            //String sqlselector="select namn from(select namn, rownum as rn from (select namn from anstalld JOIN ARBETAR_I on anstalld.AID=ARBETAR_I.AID order by sal desc)) where rn="+row;

            String proj = "";
            result = Integer.parseInt( anstalldaTable.getValueAt(row-1, 0).toString() );
            delAnstalld(result);
            loadAnstallda();
        }
    }//GEN-LAST:event_tabortanstalldActionPerformed

    private void updateKompActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateKompActionPerformed
        // TODO add your handling code here:
        int result=logic.getID(anstalldaTable);
        if(result!=-1) {
        sattAnstalldKompPlattform l = new sattAnstalldKompPlattform();
        l.getValues(result);
        l.setLabel((l.getName(result)));
        l.setVisible(true);
        }
    }//GEN-LAST:event_updateKompActionPerformed

    private void specialrollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specialrollActionPerformed
        // TODO add your handling code here:
        int result=logic.getID(anstalldaTable);
        if(result!=-1) {
        uppdateraSpecialistroll l = new uppdateraSpecialistroll();
        l.getValues(result);
        l.setLabel((l.getName(result)));
        l.setVisible(true);
        }
    }//GEN-LAST:event_specialrollActionPerformed

    private void loginbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginbtnActionPerformed
        // TODO add your handling code here:
        MainFrame main = new MainFrame();
        main.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_loginbtnActionPerformed

    private void logoutbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutbtnActionPerformed
        // TODO add your handling code here:
        logout();
    }//GEN-LAST:event_logoutbtnActionPerformed
        
    
    public void loadAnstallda(){
        tablehandler handle = new tablehandler();
        handle.cleartable(anstalldaTable);
        String sql2 = "select AID, NAMN, TELEFON, MAIL, ANVNAMN from anstalld";
        try {
            
            ArrayList<HashMap<String, String>> spelprojekt = databas.fetchRows(sql2);
            for (int i = 0; i < spelprojekt.size(); i++) {
                int col=0;
                anstalldaTable.getModel().setValueAt(spelprojekt.get(i).get("AID"), i, col); 
                col++;
                anstalldaTable.getModel().setValueAt(spelprojekt.get(i).get("NAMN"), i, col);
                col++;
                anstalldaTable.getModel().setValueAt(spelprojekt.get(i).get("TELEFON"), i, col);
                col++;
                anstalldaTable.getModel().setValueAt(spelprojekt.get(i).get("MAIL"), i, col);
                col++;
                anstalldaTable.getModel().setValueAt(spelprojekt.get(i).get("ANVNAMN"), i, col);
            }
        } catch (InfException ex) {
            System.out.println(ex.getMessage());
        }
    }    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Loggedin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Loggedin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Loggedin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Loggedin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Loggedin().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAnstalld;
    private javax.swing.JButton addProj;
    private javax.swing.JButton allprojects;
    private javax.swing.JTable anstalldaTable;
    private javax.swing.JButton btnProjektledare;
    private javax.swing.JButton btnShowEmployees;
    private javax.swing.JButton btnVisaKompetens;
    private javax.swing.JButton btnVisaSpelProjektForAnstalld;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableEmployee;
    private javax.swing.JTextArea jTextKompetens;
    private javax.swing.JButton listaledare;
    private javax.swing.JButton listaplattf;
    private javax.swing.JButton listaslapptaspel;
    private javax.swing.JButton listaspelunderutv;
    private javax.swing.JButton listp;
    private javax.swing.JButton loginbtn;
    private javax.swing.JButton logoutbtn;
    private javax.swing.JTextArea projextra;
    private javax.swing.JButton reloadanstalld;
    private javax.swing.JButton specialroll;
    private javax.swing.JTable tablearea;
    private javax.swing.JButton tabortanstalld;
    private javax.swing.JButton updateAnstalld;
    private javax.swing.JButton updateAnstalldaproj;
    private javax.swing.JButton updateKomp;
    private javax.swing.JButton updateLeader;
    private javax.swing.JButton updatePlatformsproj;
    private javax.swing.JButton updateProj;
    // End of variables declaration//GEN-END:variables
}
