/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jframe;

import java.io.File;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author AAX
 */
public class UppdProjPlattform extends javax.swing.JFrame {
    
    private InfDB databas;
    private int sid;
    /**
     * Creates new form UppdProjPlattform
     */
    public UppdProjPlattform() {
        initComponents();
        
        try {
            String path = Paths.get("").toAbsolutePath().toString() + File.separator + "MICEDB.FDB";
            databas = new InfDB(path);
            
            }
        catch (InfException ex) {
            System.out.println(ex.getMessage());
        }
    }
    public void DrawPlatforms(int sid) {
        setPPlattform(sid);
        setAllPlatforms();
        
    }
    public void setPPlattform(int sid){
        tablehandler handle = new tablehandler();
        handle.cleartable(projplatforms);
        this.sid = sid;
        String sql = "select plattform.pid, plattform.benamning, plattform.producent from plattform join INNEFATTAR on plattform.pid=innefattar.pid where innefattar.SID = "+sid;
        
        try {
            ArrayList<HashMap<String, String>> platform = databas.fetchRows(sql);
            if(platform !=null) {
            for (int i = 0; i < platform.size(); i++) {
                int col=0;
                projplatforms.getModel().setValueAt(platform.get(i).get("PID"), i, col); 
                col++;
                projplatforms.getModel().setValueAt(platform.get(i).get("BENAMNING"), i, col);
                col++;
                projplatforms.getModel().setValueAt(platform.get(i).get("PRODUCENT"), i, col);
            }
            }
            
        } catch (InfException ex) {
            System.out.println(ex.getMessage());
        }
    }
    
    public void setAllPlatforms(){
        tablehandler handle = new tablehandler();
        handle.cleartable(platforms);
        String sql = "select plattform.pid, plattform.benamning, plattform.producent from plattform";
        
        try {
            ArrayList<HashMap<String, String>> platform = databas.fetchRows(sql);
            for (int i = 0; i < platform.size(); i++) {
                int col=0;
                platforms.getModel().setValueAt(platform.get(i).get("PID"), i, col); 
                col++;
                platforms.getModel().setValueAt(platform.get(i).get("BENAMNING"), i, col);
                col++;
                platforms.getModel().setValueAt(platform.get(i).get("PRODUCENT"), i, col);
            }
        } catch (InfException ex) {
            System.out.println(ex.getMessage());
        }
    }
    
    public void addProjPlatform(int pid, int sid) {
        String sql = "insert into INNEFATTAR (SID,PID) values ("+sid+","+pid+")";
        try {
        databas.insert(sql);
        
        }catch (NumberFormatException e) {  
                System.out.println(e.getMessage());
                JOptionPane.showMessageDialog(null, "Något gick fel med inmatningen");
            }
            catch (InfException e) {  
                System.out.println(e.getMessage());
                if(e.getErrorCode() == 0) {
                    JOptionPane.showMessageDialog(null, "Vald plattform är redan registrerad för detta spelprojekt!");
                }
                else
                JOptionPane.showMessageDialog(null, "Något gick fel vid kontakten med databasen");
                
            }
    }
    
    public void delProjPlatform(int pid, int sid) {
        String sql = "DELETE FROM INNEFATTAR WHERE SID="+sid+" and PID="+pid;
        try {
        databas.delete(sql);
        
        }catch (NumberFormatException e) {  
                System.out.println(e.getMessage());
                JOptionPane.showMessageDialog(null, "Något gick fel med inmatningen");
            }
            catch (InfException e) {  
                System.out.println(e.getMessage());
                JOptionPane.showMessageDialog(null, "Något gick fel vid kontakten med databasen");
                
            }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        platforms = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        projplatforms = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        platforms.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "PID", "Benämning", "Producent"
            }
        ));
        jScrollPane3.setViewportView(platforms);

        projplatforms.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "PID", "Benämning", "Producent"
            }
        ));
        jScrollPane4.setViewportView(projplatforms);

        jLabel1.setText("Plattformar för valt projekt");

        jLabel2.setText("Alla plattformar");

        jButton1.setText("Ta bort vald plattform från projekt");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Lägg till vald plattform till projekt");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(11, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(9, 9, 9)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 234, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(42, 42, 42))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(48, 48, 48)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(363, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (projplatforms.getSelectedRow()==-1) {
            JOptionPane.showMessageDialog(null, "Markera en plattform!");
        } else {

            String output = "";
            int row = projplatforms.getSelectedRow()+1;
            int result=0;
            //String sqlselector="select namn from(select namn, rownum as rn from (select namn from anstalld JOIN ARBETAR_I on anstalld.AID=ARBETAR_I.AID order by sal desc)) where rn="+row;
            
            String proj = "";
            result = Integer.parseInt( projplatforms.getValueAt(row-1, 0).toString() );
            delProjPlatform(result, sid);
            DrawPlatforms(sid);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (platforms.getSelectedRow()==-1) {
            JOptionPane.showMessageDialog(null, "Markera en plattform!");
        } else {

            String output = "";
            int row = platforms.getSelectedRow()+1;
            int result=0;
            //String sqlselector="select namn from(select namn, rownum as rn from (select namn from anstalld JOIN ARBETAR_I on anstalld.AID=ARBETAR_I.AID order by sal desc)) where rn="+row;
            
            String proj = "";
            result = Integer.parseInt( platforms.getValueAt(row-1, 0).toString() );
            addProjPlatform(result, sid);
            DrawPlatforms(sid);
        }
        
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UppdProjPlattform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UppdProjPlattform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UppdProjPlattform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UppdProjPlattform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UppdProjPlattform().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable platforms;
    private javax.swing.JTable projplatforms;
    // End of variables declaration//GEN-END:variables
}
